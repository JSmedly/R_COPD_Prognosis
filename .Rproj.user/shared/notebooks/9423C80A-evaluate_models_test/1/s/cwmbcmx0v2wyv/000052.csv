"0","library(ggplot2)"
"0","library(latex2exp)"
"0","# Plot change in cmv vs lambda"
"0","plot_cv_lambda <- function(fit) {"
"0","  # Plot change in cvm vs lambda"
"0","  plot.data <- data.frame(lambda=fit$lambda,"
"0","                          cvm=fit$cvm)"
"0","  # Gather on alpha value"
"0","  plot.data <- plot.data %>% gather(""alpha"", ""cvm"", 2:ncol(plot.data))"
"0","  # Note if the models are run with more values of alpha, "
"0","  #  then will need a different way of plotting the lambdas. Use gather."
"0","  plot.data"
"0","  plt <- ggplot(data=plot.data) +"
"0","    geom_line(aes(x=log(lambda), y=cvm, "
"0","                  group=alpha, color=alpha)) +"
"0","    scale_color_discrete("
"0","      name = expression(alpha),"
"0","      labels = sprintf(r'(%.1f)', fit$alpha)"
"0","        #lapply(sprintf(r'($alpha = %.2f$)', fit$alpha), TeX)"
"0","      # unname(TeX(c(""$\\alpha =$ 1"", ""$\\alpha$ = 0.5"")))"
"0","      # labels = unname(TeX(c(paste(""$\\alpha = 1$"",fit$alpha, ""$"",sep=""""))))"
"0","    ) +"
"0","    # geom_line(aes(x=log(lambda), y=cvm.2), color='red') + "
"0","    geom_vline(aes(xintercept=log(fit$lambda.min)), linetype=""dotted"") + "
"0","    geom_vline(aes(xintercept=log(fit$lambda.1se)), linetype=""dashed"") +"
"0","    labs(x=expression(log(lambda)),"
"0","         y=""Cross-Validated Mean (deviance)"","
"0","         title=paste(""Cross-Validated Performance ("","
"0","                     outcome_map[outcome],"
"0","                     "")"", sep="""")"
"0","    ) +"
"0","    theme_bw()"
"0","  return(plt)"
"0","}"
"0","fit <- fit.female"
"0","plot.data"
